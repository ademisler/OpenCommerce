import React, { createContext, useContext, useState } from 'react';

export type Lang = 'en' | 'tr' | 'fr';

const translations: Record<Lang, Record<string, string>> = {
  en: {
    dashboard: 'Dashboard',
    products: 'Products',
    orders: 'Orders',
    integrations: 'Integrations',
    automations: 'Automations',
    login: 'Login',
    editProfile: 'Edit Profile',
    signOut: 'Sign Out',
    profile: 'Profile',
    saveProfile: 'Save Profile',
    changePassword: 'Change Password',
    updatePassword: 'Update Password',
    name: 'Name',
    profileImage: 'Profile Image URL',
    email: 'Email',
    password: 'Password',
    signIn: 'Sign In',
    connectedStores: 'Connected Stores',
    productsLabel: 'Products',
    totalStock: 'Total Stock',
    revenue: 'Revenue',
    welcome: 'Welcome to your e-commerce management dashboard.',
    searchProducts: 'Search products',
    noStore: 'No WooCommerce store configured.',
    loading: 'Loading...',
    createOrder: 'Create Order',
    firstName: 'First name',
    lastName: 'Last name',
    company: 'Company name (optional)',
    country: 'Country / Region',
    street: 'Street address',
    houseNumber: 'House number and street name',
    apartment: 'Apartment, suite, unit, etc. (optional)',
    postcode: 'Postcode / ZIP',
    city: 'Town / City',
    phone: 'Phone',
    emailAddress: 'Email address',
    notes: 'Order notes (optional)',
    loadingProducts: 'Loading products...',
    order: 'Order',
    status: 'Status',
    total: 'Total',
    manageIntegrations: 'Manage your platform integrations here.',
    wooStores: 'WooCommerce Stores',
    addStore: 'Add Store',
    storeName: 'Store Name',
    baseUrl: 'Base URL',
    consumerKey: 'Consumer Key',
    consumerSecret: 'Consumer Secret',
    remove: 'Remove',
    automationsIntro: 'Define automation rules for orders and products.'
  },
  tr: {
    dashboard: 'Kontrol Paneli',
    products: 'Ürünler',
    orders: 'Siparişler',
    integrations: 'Entegrasyonlar',
    automations: 'Otomasyonlar',
    login: 'Giriş',
    editProfile: 'Profili Düzenle',
    signOut: 'Çıkış Yap',
    profile: 'Profil',
    saveProfile: 'Profili Kaydet',
    changePassword: 'Şifre Değiştir',
    updatePassword: 'Şifreyi Güncelle',
    name: 'İsim',
    profileImage: 'Profil Resmi URL',
    email: 'E-posta',
    password: 'Şifre',
    signIn: 'Giriş Yap',
    connectedStores: 'Bağlı Mağazalar',
    productsLabel: 'Ürünler',
    totalStock: 'Toplam Stok',
    revenue: 'Gelir',
    welcome: 'E-ticaret yönetim panelinize hoş geldiniz.',
    searchProducts: 'Ürünlerde ara',
    noStore: 'WooCommerce mağazası yapılandırılmamış.',
    loading: 'Yükleniyor...',
    createOrder: 'Sipariş Oluştur',
    firstName: 'Ad',
    lastName: 'Soyad',
    company: 'Şirket adı (opsiyonel)',
    country: 'Ülke / Bölge',
    street: 'Sokak adresi',
    houseNumber: 'Bina numarası ve sokak adı',
    apartment: 'Apartman, daire, birim vb. (opsiyonel)',
    postcode: 'Posta Kodu',
    city: 'İl / İlçe',
    phone: 'Telefon',
    emailAddress: 'E-posta adresi',
    notes: 'Sipariş notları (opsiyonel)',
    loadingProducts: 'Ürünler yükleniyor...',
    order: 'Sipariş',
    status: 'Durum',
    total: 'Toplam',
    manageIntegrations: 'Platform entegrasyonlarınızı yönetin.',
    wooStores: 'WooCommerce Mağazaları',
    addStore: 'Mağaza Ekle',
    storeName: 'Mağaza Adı',
    baseUrl: 'Temel URL',
    consumerKey: 'Tüketici Anahtarı',
    consumerSecret: 'Tüketici Gizli Anahtarı',
    remove: 'Sil',
    automationsIntro: 'Siparişler ve ürünler için otomasyon kuralları tanımlayın.'
  },
  fr: {
    dashboard: 'Tableau de bord',
    products: 'Produits',
    orders: 'Commandes',
    integrations: 'Intégrations',
    automations: 'Automatisations',
    login: 'Connexion',
    editProfile: 'Modifier le profil',
    signOut: 'Déconnexion',
    profile: 'Profil',
    saveProfile: 'Enregistrer le profil',
    changePassword: 'Changer le mot de passe',
    updatePassword: 'Mettre à jour le mot de passe',
    name: 'Nom',
    profileImage: 'URL de l\'image de profil',
    email: 'E-mail',
    password: 'Mot de passe',
    signIn: 'Se connecter',
    connectedStores: 'Boutiques connectées',
    productsLabel: 'Produits',
    totalStock: 'Stock total',
    revenue: 'Revenu',
    welcome: 'Bienvenue sur votre tableau de gestion e-commerce.',
    searchProducts: 'Rechercher des produits',
    noStore: 'Aucune boutique WooCommerce configurée.',
    loading: 'Chargement...',
    createOrder: 'Créer une commande',
    firstName: 'Prénom',
    lastName: 'Nom de famille',
    company: 'Nom de l\'entreprise (facultatif)',
    country: 'Pays / Région',
    street: 'Adresse',
    houseNumber: 'Numéro et nom de rue',
    apartment: 'Appartement, suite, unité, etc. (facultatif)',
    postcode: 'Code postal',
    city: 'Ville',
    phone: 'Téléphone',
    emailAddress: 'Adresse e-mail',
    notes: 'Notes de commande (facultatif)',
    loadingProducts: 'Chargement des produits...',
    order: 'Commande',
    status: 'Statut',
    total: 'Total',
    manageIntegrations: 'Gérez vos intégrations de plateforme ici.',
    wooStores: 'Boutiques WooCommerce',
    addStore: 'Ajouter une boutique',
    storeName: 'Nom de la boutique',
    baseUrl: 'URL de base',
    consumerKey: 'Clé consommateur',
    consumerSecret: 'Secret consommateur',
    remove: 'Supprimer',
    automationsIntro: 'Définissez des règles d\'automatisation pour les commandes et les produits.'
  }
};

interface I18nContextValue {
  lang: Lang;
  setLang: (l: Lang) => void;
  t: (key: string) => string;
}

const I18nContext = createContext<I18nContextValue>({
  lang: 'en',
  setLang: () => {},
  t: (key: string) => translations.en[key] || key,
});

export const I18nProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [lang, setLang] = useState<Lang>('en');
  const t = (key: string) => translations[lang][key] || key;
  return (
    <I18nContext.Provider value={{ lang, setLang, t }}>
      {children}
    </I18nContext.Provider>
  );
};

export const useI18n = () => useContext(I18nContext);

